# You'll need to setup the follwing environment variables:
#   env.repoNightly - The repository to release nightly builds to e.g. betaflight-configurator-nightly
#   env.releaseNotes - The release notes to be published as part of the github release
#   env.debugReleaseNotes - The release notes to be published as part of the github debug release
#   secrets.REPO_TOKEN - A GitHub token with permissions to push and publish releases to the nightly repo

env:
  repoNightly: betaflight/blackbox-log-viewer-nightlies
  debugReleaseNotes: >
    This is an automated development build.
    It may be unstable and result in corrupted configurations or data loss.
    **Use only for testing.**
  releaseNotes: This is a release build. It does not contain the debug console.

name: Nightly

on:
  push:
    branches:
      - master
      - '*-maintenance'

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/ci.yml

  release:
    name: Release
    needs: ci
    runs-on: ubuntu-22.04
    steps:
      - name: Fetch build artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-assets/

      - name: Select release notes
        id: notes
        run: |
          set -- release-assets/Betaflight-Blackbox-Explorer-Debug-*
          echo "notes=$(test -e "$1" && echo '${{ env.debugReleaseNotes }}' || echo '${{ env.releaseNotes }}')" >> $GITHUB_OUTPUT

      - name: Get current date
        id: date
        run: echo "today=$(date '+%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          token: ${{ secrets.REPO_TOKEN }}
          repository: ${{ env.repoNightly }}
          tag_name: v${{ steps.date.outputs.today }}.${{ github.run_number }}
          files: release-assets/Betaflight-Blackbox-Explorer-*/**
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          body: |
            ${{ steps.notes.outputs.notes }}

            ### Repository:
            ${{ github.repository }} ([link](${{ github.event.repository.html_url }}))

            ### Branch:
            ${{ github.ref_name }} ([link](${{ github.event.repository.html_url }}/tree/${{ github.ref_name }}))

            ### Latest changeset:
            ${{ github.event.head_commit.id }} ([link](${{ github.event.head_commit.url }}))

            ### Changes:
            ${{ github.event.head_commit.message }}
